{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{206:function(e,a,t){\"use strict\";t.r(a);var r=t(0),s=Object(r.a)({},function(){var e=this,a=e.$createElement,t=e._self._c||a;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":e.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"数据流管理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据流管理\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 数据流管理\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"_1-掌握react和vue传统的跨组件通信方案，对比采用数据流管理框架的异同\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-掌握react和vue传统的跨组件通信方案，对比采用数据流管理框架的异同\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 1.掌握\"),t(\"code\",[e._v(\"React\")]),e._v(\"和\"),t(\"code\",[e._v(\"Vue\")]),e._v(\"传统的跨组件通信方案，对比采用数据流管理框架的异同\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"_2-熟练使用redux管理数据流，并理解其实现原理，中间件实现原理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-熟练使用redux管理数据流，并理解其实现原理，中间件实现原理\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 2.熟练使用\"),t(\"code\",[e._v(\"Redux\")]),e._v(\"管理数据流，并理解其实现原理，中间件实现原理\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"_3-熟练使用mobx管理数据流，并理解其实现原理，相比redux有什么优势\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-熟练使用mobx管理数据流，并理解其实现原理，相比redux有什么优势\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 3.熟练使用\"),t(\"code\",[e._v(\"Mobx\")]),e._v(\"管理数据流，并理解其实现原理，相比\"),t(\"code\",[e._v(\"Redux\")]),e._v(\"有什么优势\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"_4-熟练使用vuex管理数据流，并理解其实现原理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-熟练使用vuex管理数据流，并理解其实现原理\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 4.熟练使用\"),t(\"code\",[e._v(\"Vuex\")]),e._v(\"管理数据流，并理解其实现原理\")]),e._v(\" \"),t(\"h2\",{attrs:{id:\"_5-以上数据流方案的异同和优缺点，不情况下的技术选型\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_5-以上数据流方案的异同和优缺点，不情况下的技术选型\",\"aria-hidden\":\"true\"}},[e._v(\"#\")]),e._v(\" 5.以上数据流方案的异同和优缺点，不情况下的技术选型\")])])},[],!1,null,null,null);a.default=s.exports}}]);","extractedComments":[]}