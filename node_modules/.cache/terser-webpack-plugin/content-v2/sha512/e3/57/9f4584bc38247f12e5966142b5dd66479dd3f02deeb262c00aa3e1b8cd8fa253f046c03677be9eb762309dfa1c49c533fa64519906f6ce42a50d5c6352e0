{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{202:function(a,e,s){\"use strict\";s.r(e);var n=s(0),r=Object(n.a)({},function(){var a=this,e=a.$createElement,s=a._self._c||e;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":a.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"数据类型和变量\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据类型和变量\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 数据类型和变量\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"一-数据类型\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一-数据类型\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 一.数据类型\")]),a._v(\" \"),s(\"p\",[a._v(\"计算机顾名思义就是可以做数学计算的机器，因此，计算机程序理所当然地可以处理各种数值。但是，计算机能处理的远不止数值，还可以处理文本、图形、音频、视频、网页等各种各样的数据，不同的数据，需要定义不同的数据类型。在JavaScript中定义了以下几种数据类型：\")]),a._v(\" \"),s(\"h4\",{attrs:{id:\"number\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#number\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" Number\")]),a._v(\" \"),s(\"p\",[a._v(\"JavaScript不区分整数和浮点数，统一用Number表示，以下都是合法的Number类型：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"123; // 整数123\\n0.456; // 浮点数0.456\\n1.2345e3; // 科学计数法表示1.2345x1000，等同于1234.5\\n-99; // 负数\\nNaN; // NaN表示Not a Number，当无法计算结果时用NaN表示\\nInfinity; // Infinity表示无限大，当数值超过了JavaScript的Number所能表示的最大值时，就表示为Infinity\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"6\")]),s(\"br\")])]),s(\"p\",[a._v(\"计算机由于使用二进制，所以，有时候用十六进制表示整数比较方便，十六进制用0x前缀和0-9，a-f表示，例如：\"),s(\"code\",[a._v(\"0xff00\")]),a._v(\"，\"),s(\"code\",[a._v(\"0xa5b4c3d2\")]),a._v(\"，等等，它们和十进制表示的数值完全一样。\")]),a._v(\" \"),s(\"p\",[a._v(\"Number可以直接做四则运算，规则和数学一致：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"1 + 2; // 3\\n(1 + 2) * 5 / 2; // 7.5\\n2 / 0; // Infinity\\n0 / 0; // NaN\\n10 % 3; // 1\\n10.5 % 3; // 1.5\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"6\")]),s(\"br\")])]),s(\"p\",[a._v(\"注意\"),s(\"code\",[a._v(\"%\")]),a._v(\"是求余运算。\")]),a._v(\" \"),s(\"h4\",{attrs:{id:\"字符串\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#字符串\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 字符串\")]),a._v(\" \"),s(\"p\",[a._v(\"字符串是以单引号'或双引号\\\"括起来的任意文本，比如\"),s(\"code\",[a._v(\"'abc'\")]),a._v(\"，\"),s(\"code\",[a._v('\"xyz\"')]),a._v(\"等等。请注意，\"),s(\"code\",[a._v(\"''\")]),a._v(\"或\"),s(\"code\",[a._v('\"\"')]),a._v(\"本身只是一种表示方式，不是字符串的一部分，因此，字符串\"),s(\"code\",[a._v(\"'abc'\")]),a._v(\"只有\"),s(\"code\",[a._v(\"a\")]),a._v(\"，\"),s(\"code\",[a._v(\"b\")]),a._v(\"，\"),s(\"code\",[a._v(\"c\")]),a._v(\"这3个字符。\")]),a._v(\" \"),s(\"h4\",{attrs:{id:\"布尔值\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#布尔值\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 布尔值\")]),a._v(\" \"),s(\"p\",[a._v(\"布尔值和布尔代数的表示完全一致，一个布尔值只有\"),s(\"code\",[a._v(\"true\")]),a._v(\"、\"),s(\"code\",[a._v(\"false\")]),a._v(\"两种值，要么是\"),s(\"code\",[a._v(\"true\")]),a._v(\"，要么是\"),s(\"code\",[a._v(\"false\")]),a._v(\"，可以直接用\"),s(\"code\",[a._v(\"true\")]),a._v(\"、\"),s(\"code\",[a._v(\"false\")]),a._v(\"表示布尔值，也可以通过布尔运算计算出来：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"true; // 这是一个true值\\nfalse; // 这是一个false值\\n2 > 1; // 这是一个true值\\n2 >= 3; // 这是一个false值\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\")])]),s(\"p\",[s(\"code\",[a._v(\"&&\")]),a._v(\"运算是与运算，只有所有都为\"),s(\"code\",[a._v(\"true\")]),a._v(\"，\"),s(\"code\",[a._v(\"&&\")]),a._v(\"运算结果才是\"),s(\"code\",[a._v(\"true\")]),a._v(\"：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"true && true; // 这个&&语句计算结果为true\\ntrue && false; // 这个&&语句计算结果为false\\nfalse && true && false; // 这个&&语句计算结果为false\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\")])]),s(\"p\",[s(\"code\",[a._v(\"||\")]),a._v(\"运算是或运算，只要其中有一个为\"),s(\"code\",[a._v(\"true\")]),a._v(\"，\"),s(\"code\",[a._v(\"||\")]),a._v(\"运算结果就是\"),s(\"code\",[a._v(\"true\")]),a._v(\"：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"false || false; // 这个||语句计算结果为false\\ntrue || false; // 这个||语句计算结果为true\\nfalse || true || false; // 这个||语句计算结果为true\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\")])]),s(\"p\",[s(\"code\",[a._v(\"!\")]),a._v(\"运算是非运算，它是一个单目运算符，把\"),s(\"code\",[a._v(\"true\")]),a._v(\"变成\"),s(\"code\",[a._v(\"false\")]),a._v(\"，\"),s(\"code\",[a._v(\"false\")]),a._v(\"变成\"),s(\"code\",[a._v(\"true\")]),a._v(\"：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"! true; // 结果为false\\n! false; // 结果为true\\n! (2 > 5); // 结果为true\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\")])]),s(\"p\",[a._v(\"布尔值经常用在条件判断中，比如：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"var age = 15;\\nif (age >= 18) {\\n    alert('adult');\\n} else {\\n    alert('teenager');\\n}\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"6\")]),s(\"br\")])]),s(\"h4\",{attrs:{id:\"symbol\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#symbol\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" Symbol\")]),a._v(\" \"),s(\"p\",[a._v(\"Symbol 是 ES6 中引入的新类型，它是一切非字符串的对象 key 的集合，在 ES6 规范中，整个对象系统被用 Symbol 重塑。\")]),a._v(\" \"),s(\"p\",[a._v(\"Symbol 可以具有字符串类型的描述，但是即使描述相同，Symbol 也不相等。 我们创建 Symbol 的方式是使用全局的 Symbol 函数。\")]),a._v(\" \"),s(\"p\",[a._v(\"例如：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v('var mySymbol = Symbol(\"my symbol\"); \\n')])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\")])]),s(\"p\",[a._v(\"一些标准中提到的 Symbol，可以在全局的 Symbol 函数的属性中找到。\")]),a._v(\" \"),s(\"p\",[a._v(\"例如，我们可以使用 Symbol.iterator 来自定义 for…of 在对象上的行为：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\" var o = new Object o[Symbol.iterator] = function() { \\n var v = 0 \\n return { \\n next: function() { \\n eturn { \\n value: v++, \\n done: v > 10 \\n } } } }; \\n for(var v of o) \\n console.log(v); // 0 1 2 3 ... 9\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"8\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"9\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"10\")]),s(\"br\")])]),s(\"p\",[a._v(\"代码中我们定义了 iterator 之后，用 for(var v of o) 就可以调用这个函数，然后我们可以根据函数的行为，产生一个 for…of 的行为。 这里我们给对象 o 添加了 Symbol.iterator 属性，并且按照迭代器的要求定义了一个 0 到 10 的迭代器，之后我们就可以在 for of 中愉快地使用这个 o 对象啦。\")]),a._v(\" \"),s(\"p\",[a._v(\"这些标准中被称为“众所周知”的 Symbol，也构成了语言的一类接口形式。它们允许编写与语言结合更紧密的 API。\")]),a._v(\" \"),s(\"h3\",{attrs:{id:\"二-比较运算符\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二-比较运算符\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 二.比较运算符\")]),a._v(\" \"),s(\"p\",[a._v(\"当我们对Number做比较时，可以通过比较运算符得到一个布尔值：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"2 > 5; // false\\n5 >= 2; // true\\n7 == 7; // true\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\")])]),s(\"p\",[a._v(\"实际上，JavaScript允许对任意数据类型做比较：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"false == 0; // true\\nfalse === 0; // false\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\")])]),s(\"p\",[a._v(\"要特别注意相等运算符\"),s(\"code\",[a._v(\"==\")]),a._v(\"。JavaScript在设计时，有两种比较运算符：\")]),a._v(\" \"),s(\"p\",[a._v(\"第一种是\"),s(\"code\",[a._v(\"==\")]),a._v(\"比较，它会自动转换数据类型再比较，很多时候，会得到非常诡异的结果；\")]),a._v(\" \"),s(\"p\",[a._v(\"第二种是\"),s(\"code\",[a._v(\"===\")]),a._v(\"比较，它不会自动转换数据类型，如果数据类型不一致，返回\"),s(\"code\",[a._v(\"false\")]),a._v(\"，如果一致，再比较。\")]),a._v(\" \"),s(\"p\",[a._v(\"由于JavaScript这个设计缺陷，\"),s(\"em\",[a._v(\"不要\")]),a._v(\"使用\"),s(\"code\",[a._v(\"==\")]),a._v(\"比较，始终坚持使用\"),s(\"code\",[a._v(\"===\")]),a._v(\"比较。\")]),a._v(\" \"),s(\"p\",[a._v(\"另一个例外是\"),s(\"code\",[a._v(\"NaN\")]),a._v(\"这个特殊的Number与所有其他值都不相等，包括它自己：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"NaN === NaN; // false\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\")])]),s(\"p\",[a._v(\"唯一能判断\"),s(\"code\",[a._v(\"NaN\")]),a._v(\"的方法是通过\"),s(\"code\",[a._v(\"isNaN()\")]),a._v(\"函数：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"isNaN(NaN); // true\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\")])]),s(\"p\",[a._v(\"最后要注意浮点数的相等比较：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"1 / 3 === (1 - 2 / 3); // false\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\")])]),s(\"p\",[a._v(\"这不是JavaScript的设计缺陷。浮点数在运算过程中会产生误差，因为计算机无法精确表示无限循环小数。要比较两个浮点数是否相等，只能计算它们之差的绝对值，看是否小于某个阈值：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"Math.abs(1 / 3 - (1 - 2 / 3)) < 0.0000001; // true\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\")])]),s(\"h4\",{attrs:{id:\"null和undefined\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#null和undefined\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" null和undefined\")]),a._v(\" \"),s(\"p\",[s(\"code\",[a._v(\"null\")]),a._v(\"表示一个“空”的值，它和\"),s(\"code\",[a._v(\"0\")]),a._v(\"以及空字符串\"),s(\"code\",[a._v(\"''\")]),a._v(\"不同，\"),s(\"code\",[a._v(\"0\")]),a._v(\"是一个数值，\"),s(\"code\",[a._v(\"''\")]),a._v(\"表示长度为0的字符串，而\"),s(\"code\",[a._v(\"null\")]),a._v(\"表示“空”。\")]),a._v(\" \"),s(\"p\",[a._v(\"在其他语言中，也有类似JavaScript的\"),s(\"code\",[a._v(\"null\")]),a._v(\"的表示，例如Java也用\"),s(\"code\",[a._v(\"null\")]),a._v(\"，Swift用\"),s(\"code\",[a._v(\"nil\")]),a._v(\"，Python用\"),s(\"code\",[a._v(\"None\")]),a._v(\"表示。但是，在JavaScript中，还有一个和\"),s(\"code\",[a._v(\"null\")]),a._v(\"类似的\"),s(\"code\",[a._v(\"undefined\")]),a._v(\"，它表示“未定义”。\")]),a._v(\" \"),s(\"p\",[a._v(\"JavaScript的设计者希望用\"),s(\"code\",[a._v(\"null\")]),a._v(\"表示一个空的值，而\"),s(\"code\",[a._v(\"undefined\")]),a._v(\"表示值未定义。事实证明，这并没有什么卵用，区分两者的意义不大。大多数情况下，我们都应该用\"),s(\"code\",[a._v(\"null\")]),a._v(\"。\"),s(\"code\",[a._v(\"undefined\")]),a._v(\"仅仅在判断函数参数是否传递的情况下有用。\")]),a._v(\" \"),s(\"h4\",{attrs:{id:\"数组\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数组\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 数组\")]),a._v(\" \"),s(\"p\",[a._v(\"数组是一组按顺序排列的集合，集合的每个值称为元素。JavaScript的数组可以包括任意数据类型。例如：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"[1, 2, 3.14, 'Hello', null, true];\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\")])]),s(\"p\",[a._v(\"上述数组包含6个元素。数组用\"),s(\"code\",[a._v(\"[]\")]),a._v(\"表示，元素之间用\"),s(\"code\",[a._v(\",\")]),a._v(\"分隔。\")]),a._v(\" \"),s(\"p\",[a._v(\"另一种创建数组的方法是通过\"),s(\"code\",[a._v(\"Array()\")]),a._v(\"函数实现：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"new Array(1, 2, 3); // 创建了数组[1, 2, 3]\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\")])]),s(\"p\",[a._v(\"然而，出于代码的可读性考虑，强烈建议直接使用\"),s(\"code\",[a._v(\"[]\")]),a._v(\"。\")]),a._v(\" \"),s(\"p\",[a._v(\"数组的元素可以通过索引来访问。请注意，索引的起始值为\"),s(\"code\",[a._v(\"0\")]),a._v(\"：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"var arr = [1, 2, 3.14, 'Hello', null, true];\\narr[0]; // 返回索引为0的元素，即1\\narr[5]; // 返回索引为5的元素，即true\\narr[6]; // 索引超出了范围，返回undefined\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\")])]),s(\"h4\",{attrs:{id:\"对象\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#对象\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 对象\")]),a._v(\" \"),s(\"p\",[a._v(\"JavaScript的对象是一组由键-值组成的无序集合，例如：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"var person = {\\n    name: 'Bob',\\n    age: 20,\\n    tags: ['js', 'web', 'mobile'],\\n    city: 'Beijing',\\n    hasCar: true,\\n    zipcode: null\\n};\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"8\")]),s(\"br\")])]),s(\"p\",[a._v(\"JavaScript对象的键都是字符串类型，值可以是任意数据类型。上述\"),s(\"code\",[a._v(\"person\")]),a._v(\"对象一共定义了6个键值对，其中每个键又称为对象的属性，例如，\"),s(\"code\",[a._v(\"person\")]),a._v(\"的\"),s(\"code\",[a._v(\"name\")]),a._v(\"属性为\"),s(\"code\",[a._v(\"'Bob'\")]),a._v(\"，\"),s(\"code\",[a._v(\"zipcode\")]),a._v(\"属性为\"),s(\"code\",[a._v(\"null\")]),a._v(\"。\")]),a._v(\" \"),s(\"p\",[a._v(\"要获取一个对象的属性，我们用\"),s(\"code\",[a._v(\"对象变量.属性名\")]),a._v(\"的方式：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"person.name; // 'Bob'\\nperson.zipcode; // null\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\")])]),s(\"h3\",{attrs:{id:\"三-变量\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三-变量\",\"aria-hidden\":\"true\"}},[a._v(\"#\")]),a._v(\" 三.变量\")]),a._v(\" \"),s(\"p\",[a._v(\"变量的概念基本上和初中代数的方程变量是一致的，只是在计算机程序中，变量不仅可以是数字，还可以是任意数据类型。\")]),a._v(\" \"),s(\"p\",[a._v(\"变量在JavaScript中就是用一个变量名表示，变量名是大小写英文、数字、\"),s(\"code\",[a._v(\"$\")]),a._v(\"和\"),s(\"code\",[a._v(\"_\")]),a._v(\"的组合，且不能用数字开头。变量名也不能是JavaScript的关键字，如\"),s(\"code\",[a._v(\"if\")]),a._v(\"、\"),s(\"code\",[a._v(\"while\")]),a._v(\"等。申明一个变量用\"),s(\"code\",[a._v(\"var\")]),a._v(\"语句，比如：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"var a; // 申明了变量a，此时a的值为undefined\\nvar $b = 1; // 申明了变量$b，同时给$b赋值，此时$b的值为1\\nvar s_007 = '007'; // s_007是一个字符串\\nvar Answer = true; // Answer是一个布尔值true\\nvar t = null; // t的值是null\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"5\")]),s(\"br\")])]),s(\"p\",[a._v(\"变量名也可以用中文，但是，请不要给自己找麻烦。\")]),a._v(\" \"),s(\"p\",[a._v(\"在JavaScript中，使用等号\"),s(\"code\",[a._v(\"=\")]),a._v(\"对变量进行赋值。可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，但是要注意只能用\"),s(\"code\",[a._v(\"var\")]),a._v(\"申明一次，例如：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"var a = 123; // a的值是整数123\\na = 'ABC'; // a变为字符串\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\")])]),s(\"p\",[a._v(\"这种变量本身类型不固定的语言称之为动态语言，与之对应的是静态语言。静态语言在定义变量时必须指定变量类型，如果赋值的时候类型不匹配，就会报错。例如Java是静态语言，赋值语句如下：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v('int a = 123; // a是整数类型变量，类型用int申明\\na = \"ABC\"; // 错误：不能把字符串赋给整型变量\\n')])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\")])]),s(\"p\",[a._v(\"和静态语言相比，动态语言更灵活，就是这个原因。\")]),a._v(\" \"),s(\"p\",[a._v(\"请不要把赋值语句的等号等同于数学的等号。比如下面的代码：\")]),a._v(\" \"),s(\"div\",{staticClass:\"language- line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[s(\"code\",[a._v(\"var x = 10;\\nx = x + 2;\\n\")])]),a._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[a._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[a._v(\"2\")]),s(\"br\")])]),s(\"p\",[a._v(\"如果从数学上理解\"),s(\"code\",[a._v(\"x = x + 2\")]),a._v(\"那无论如何是不成立的，在程序中，赋值语句先计算右侧的表达式\"),s(\"code\",[a._v(\"x + 2\")]),a._v(\"，得到结果\"),s(\"code\",[a._v(\"12\")]),a._v(\"，再赋给变量\"),s(\"code\",[a._v(\"x\")]),a._v(\"。由于\"),s(\"code\",[a._v(\"x\")]),a._v(\"之前的值是\"),s(\"code\",[a._v(\"10\")]),a._v(\"，重新赋值后，\"),s(\"code\",[a._v(\"x\")]),a._v(\"的值变成\"),s(\"code\",[a._v(\"12\")]),a._v(\"。\")])])},[],!1,null,null,null);e.default=r.exports}}]);","extractedComments":[]}