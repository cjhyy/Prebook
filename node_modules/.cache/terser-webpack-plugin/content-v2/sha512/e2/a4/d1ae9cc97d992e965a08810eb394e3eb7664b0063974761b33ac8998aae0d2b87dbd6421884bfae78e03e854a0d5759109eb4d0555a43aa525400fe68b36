{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{214:function(t,s,a){\"use strict\";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"变量和类型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#变量和类型\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 变量和类型\")]),t._v(\" \"),a(\"p\",[t._v(\"部分截取于\"),a(\"a\",{attrs:{href:\"https://juejin.im/post/5cec1bcff265da1b8f1aa08f\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"【JS 进阶】你真的掌握变量和类型了吗\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"h2\",{attrs:{id:\"一-javascript规定了几种数据类型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#一-javascript规定了几种数据类型\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 一.\"),a(\"code\",[t._v(\"JavaScript\")]),t._v(\"规定了几种数据类型\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://link.juejin.im?target=http%3A%2F%2Fwww.ecma-international.org%2Fecma-262%2F9.0%2Findex.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"ECMAScript标准\"),a(\"OutboundLink\")],1),t._v(\"规定了\"),a(\"code\",[t._v(\"7\")]),t._v(\"种数据类型，其把这\"),a(\"code\",[t._v(\"7\")]),t._v(\"种数据类型又分为两种：原始类型和对象类型。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"原始类型\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"Null\")]),t._v(\"：只包含一个值：\"),a(\"code\",[t._v(\"null\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"Undefined\")]),t._v(\"：只包含一个值：\"),a(\"code\",[t._v(\"undefined\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"Boolean\")]),t._v(\"：包含两个值：\"),a(\"code\",[t._v(\"true\")]),t._v(\"和\"),a(\"code\",[t._v(\"false\")])]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"Number\")]),t._v(\"：整数或浮点数，还有一些特殊值（\"),a(\"code\",[t._v(\"-Infinity\")]),t._v(\"、\"),a(\"code\",[t._v(\"+Infinity\")]),t._v(\"、\"),a(\"code\",[t._v(\"NaN\")]),t._v(\"）\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"String\")]),t._v(\"：一串表示文本值的字符序列\")]),t._v(\" \"),a(\"li\",[a(\"code\",[t._v(\"Symbol\")]),t._v(\"：一种实例是唯一且不可改变的数据类型\")])]),t._v(\" \"),a(\"p\",[t._v(\"(在\"),a(\"code\",[t._v(\"es10\")]),t._v(\"中加入了第七种原始类型\"),a(\"code\",[t._v(\"BigInt\")]),t._v(\"，现已被最新\"),a(\"code\",[t._v(\"Chrome\")]),t._v(\"支持)\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"对象类型\")])]),t._v(\" \"),a(\"ul\",[a(\"li\",[a(\"code\",[t._v(\"Object\")]),t._v(\"：自己分一类丝毫不过分，除了常用的\"),a(\"code\",[t._v(\"Object\")]),t._v(\"，\"),a(\"code\",[t._v(\"Array\")]),t._v(\"、\"),a(\"code\",[t._v(\"Function\")]),t._v(\"等都属于特殊的对象\")])]),t._v(\" \"),a(\"h2\",{attrs:{id:\"二-javascript对象的底层数据结构是什么\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#二-javascript对象的底层数据结构是什么\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 二.\"),a(\"code\",[t._v(\"JavaScript\")]),t._v(\"对象的底层数据结构是什么\")]),t._v(\" \"),a(\"p\",[t._v(\"object为引用类型，不具有可变性，引用类型的值实际存储在堆内存中，它在栈中只存储了一个固定长度的地址，这个地址指向堆内存中的值。所以对象底层实现是通过hashmap数据结构来搜索查找。\")]),t._v(\" \"),a(\"p\",[t._v(\"数据结构是hashmap查找\")]),t._v(\" \"),a(\"p\",[t._v(\"具体实现：\"),a(\"a\",{attrs:{href:\"https://zhuanlan.zhihu.com/p/26169639\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"从Chrome源码看JS Object的实现\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"h2\",{attrs:{id:\"三-symbol类型在实际开发中的应用、可手动实现一个简单的symbol\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#三-symbol类型在实际开发中的应用、可手动实现一个简单的symbol\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 三.\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"类型在实际开发中的应用、可手动实现一个简单的\"),a(\"code\",[t._v(\"Symbol\")])]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_1-symbol的特性\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-symbol的特性\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 1.Symbol的特性\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"1.独一无二\")])]),t._v(\" \"),a(\"p\",[t._v(\"直接使用\"),a(\"code\",[t._v(\"Symbol()\")]),t._v(\"创建新的\"),a(\"code\",[t._v(\"symbol\")]),t._v(\"变量，可选用一个字符串用于描述。当参数为对象时，将调用对象的\"),a(\"code\",[t._v(\"toString()\")]),t._v(\"方法。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" sym1 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Symbol\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Symbol() \")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" sym2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Symbol\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'ConardLi'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Symbol(ConardLi)\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" sym3 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Symbol\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'ConardLi'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Symbol(ConardLi)\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" sym4 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Symbol\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"name\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'ConardLi'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// Symbol([object Object])\")]),t._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"sym2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"===\")]),t._v(\" sym3\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// false\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\")])]),a(\"p\",[t._v(\"我们用两个相同的字符串创建两个\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"变量，它们是不相等的，可见每个\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"变量都是独一无二的。\")]),t._v(\" \"),a(\"p\",[t._v(\"如果我们想创造两个相等的\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"变量，可以使用\"),a(\"code\",[t._v(\"Symbol.for(key)\")]),t._v(\"。\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"使用给定的key搜索现有的symbol，如果找到则返回该symbol。否则将使用给定的key在全局symbol注册表中创建一个新的symbol。\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"var sym1 = Symbol.for('ConardLi');\\nvar sym2 = Symbol.for('ConardLi');\\nconsole.log(sym1 === sym2); // true\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[t._v(\"2.原始类型\")])]),t._v(\" \"),a(\"p\",[t._v(\"注意是使用\"),a(\"code\",[t._v(\"Symbol()\")]),t._v(\"函数创建\"),a(\"code\",[t._v(\"symbol\")]),t._v(\"变量，并非使用构造函数，使用\"),a(\"code\",[t._v(\"new\")]),t._v(\"操作符会直接报错。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"new Symbol(); // Uncaught TypeError: Symbol is not a constructor\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[t._v(\"我们可以使用\"),a(\"code\",[t._v(\"typeof\")]),t._v(\"运算符判断一个\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"类型：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"typeof Symbol() === 'symbol'\\ntypeof Symbol('ConardLi') === 'symbol'\\n复制代码\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[t._v(\"3.不可枚举\")])]),t._v(\" \"),a(\"p\",[t._v(\"当使用\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"作为对象属性时，可以保证对象不会出现重名属性，调用\"),a(\"code\",[t._v(\"for...in\")]),t._v(\"不能将其枚举出来，另外调用\"),a(\"code\",[t._v(\"Object.getOwnPropertyNames、Object.keys()\")]),t._v(\"也不能获取\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"属性。\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"可以调用Object.getOwnPropertySymbols()用于专门获取Symbol属性。\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"var obj = {\\n  name:'ConardLi',\\n  [Symbol('name2')]:'code秘密花园'\\n}\\nObject.getOwnPropertyNames(obj); // [\\\"name\\\"]\\nObject.keys(obj); // [\\\"name\\\"]\\nfor (var i in obj) {\\n   console.log(i); // name\\n}\\nObject.getOwnPropertySymbols(obj) // [Symbol(name)]\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\")])]),a(\"h3\",{attrs:{id:\"_2-symbol的应用场景\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-symbol的应用场景\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 2.Symbol的应用场景\")]),t._v(\" \"),a(\"p\",[t._v(\"下面是几个\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"在程序中的应用场景。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"应用一：防止XSS\")])]),t._v(\" \"),a(\"p\",[t._v(\"在\"),a(\"code\",[t._v(\"React\")]),t._v(\"的\"),a(\"code\",[t._v(\"ReactElement\")]),t._v(\"对象中，有一个\"),a(\"code\",[t._v(\"$$typeof\")]),t._v(\"属性，它是一个\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"类型的变量：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"var REACT_ELEMENT_TYPE =\\n  (typeof Symbol === 'function' && Symbol.for && Symbol.for('react.element')) ||\\n  0xeac7;\\n复制代码\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"p\",[a(\"code\",[t._v(\"ReactElement.isValidElement\")]),t._v(\"函数用来判断一个React组件是否是有效的，下面是它的具体实现。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"ReactElement.isValidElement = function (object) {\\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\\n};\\n复制代码\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"p\",[t._v(\"可见\"),a(\"code\",[t._v(\"React\")]),t._v(\"渲染时会把没有\"),a(\"code\",[t._v(\"$$typeof\")]),t._v(\"标识，以及规则校验不通过的组件过滤掉。\")]),t._v(\" \"),a(\"p\",[t._v(\"如果你的服务器有一个漏洞，允许用户存储任意\"),a(\"code\",[t._v(\"JSON\")]),t._v(\"对象， 而客户端代码需要一个字符串，这可能会成为一个问题：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// JSON\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" expectedTextButGotJSON \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  type\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'div'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  props\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    dangerouslySetInnerHTML\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      __html\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'/* put your exploit here */'\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" message \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" text\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" expectedTextButGotJSON \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"p\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"message\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"text\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"p\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),a(\"br\")])]),a(\"p\",[t._v(\"而\"),a(\"code\",[t._v(\"JSON\")]),t._v(\"中不能存储\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"类型的变量，这就是防止\"),a(\"code\",[t._v(\"XSS\")]),t._v(\"的一种手段。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"应用二：私有属性\")])]),t._v(\" \"),a(\"p\",[t._v(\"借助\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"类型的不可枚举，我们可以在类中模拟私有属性，控制变量读写：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" privateField \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Symbol\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"myClass\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"constructor\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"privateField\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'ConardLi'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"getField\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"privateField\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"setField\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"val\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"privateField\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" val\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[t._v(\"应用三：防止属性污染\")])]),t._v(\" \"),a(\"p\",[t._v(\"在某些情况下，我们可能要为对象添加一个属性，此时就有可能造成属性覆盖，用\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"作为对象属性可以保证永远不会出现同名属性。\")]),t._v(\" \"),a(\"p\",[t._v(\"例如下面的场景，我们模拟实现一个\"),a(\"code\",[t._v(\"call\")]),t._v(\"方法：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[t._v(\"    \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"myCall\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token parameter\"}},[t._v(\"context\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"!==\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'function'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n        \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"undefined\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 用于防止 Function.prototype.myCall() 直接调用\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n      context \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" context \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"||\")]),t._v(\" window\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" fn \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Symbol\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n      context\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"fn\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" args \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"arguments\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"slice\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" result \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" context\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"fn\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"args\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"delete\")]),t._v(\" context\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"fn\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n      \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" result\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\")])]),a(\"p\",[t._v(\"我们需要在某个对象上临时调用一个方法，又不能造成属性污染，\"),a(\"code\",[t._v(\"Symbol\")]),t._v(\"是一个很好的选择。\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"四-javascript中的变量在内存中的具体存储形式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#四-javascript中的变量在内存中的具体存储形式\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 四.\"),a(\"code\",[t._v(\"JavaScript\")]),t._v(\"中的变量在内存中的具体存储形式\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_1-栈内存和堆内存\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-栈内存和堆内存\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 1.栈内存和堆内存\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"JavaScript中的变量分为基本类型和引用类型\\n基本类型是保存在栈内存中的简单数据段，它们的值都有固定的大小，保存在栈空间，通过按值访问\")]),t._v(\" \"),a(\"p\",[t._v(\"引用类型是保存在堆内存中的对象，值大小不固定，栈内存中存放的该对象的访问地址指向堆内存中的对象，JavaScript不允许直接访问堆内存中的位置，因此操作对象时，实际操作对象的引用\")])]),t._v(\" \"),a(\"p\",[t._v(\"栈内存：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"存储的值大小固定\")]),t._v(\" \"),a(\"li\",[t._v(\"空间较小\")]),t._v(\" \"),a(\"li\",[t._v(\"可以直接操作其保存的变量，运行效率高\")]),t._v(\" \"),a(\"li\",[t._v(\"由系统自动分配存储空间\")])]),t._v(\" \"),a(\"p\",[t._v(\"堆内存：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"存储的值大小不定，可动态调整\")]),t._v(\" \"),a(\"li\",[t._v(\"空间较大，运行效率低\")]),t._v(\" \"),a(\"li\",[t._v(\"无法直接操作其内部存储，使用引用地址读取\")]),t._v(\" \"),a(\"li\",[t._v(\"通过代码进行分配空间\")])]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_2-结合代码和图片理解\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-结合代码和图片理解\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 2.结合代码和图片理解\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" a1 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 栈内存\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" a2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"this is string\"')]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 栈内存\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" a3 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 栈内存\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" b \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" x\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 变量b存在于栈中，{ x: 10 }作为对象存在于堆中\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"let\")]),t._v(\" c \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 变量c存在于栈中，[1, 2, 3]作为对象存在于堆中\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\")])]),a(\"p\",[a(\"img\",{attrs:{src:\"/Javascript/%E5%8F%98%E9%87%8F%E5%A4%8D%E5%88%B6.png\",alt:\"变量空间\"}})]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_3-基本类型发生复制行为时\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-基本类型发生复制行为时\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 3.基本类型发生复制行为时\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" a\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" b\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"a\\na\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"a\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"+\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'L'\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\")])]),a(\"p\",[t._v(\"会在栈内存中新开一个空间，然后把a的值赋值给b.然后新开一个空间命名为a，并赋值‘10L’给a。体现了基本类型的不变性。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_4-引用类型发生复制行为时\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_4-引用类型发生复制行为时\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 4.引用类型发生复制行为时\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" a\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"x\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"10\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" b\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\"a\\na\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"x\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"b\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"x\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// =5\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"p\",[a(\"img\",{attrs:{src:\"/Javascript/%E5%AF%B9%E8%B1%A1%E5%A4%8D%E5%88%B6.png\",alt:\"变量空间\"}})]),t._v(\" \"),a(\"p\",[t._v(\"当b=a进行拷贝时，其实复制的是a的引用地址，而并非堆里面的值。\")]),t._v(\" \"),a(\"p\",[t._v(\"而当我们\"),a(\"strong\",[t._v(\"a.x=5\")]),t._v(\"时进行修改时，由于a与b指向的是同一个地址，所以自然b也受了影响，这就是所谓的浅拷贝了。\")]),t._v(\" \"),a(\"p\",[t._v(\"要是在堆内存中也开辟一个新的内存专门为b存放值，就像基本类型那样，就达到深拷贝的效果了.\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://www.cnblogs.com/echolun/p/7889848.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"【JS】深拷贝与浅拷贝的区别，实现深拷贝的几种方法\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"h2\",{attrs:{id:\"五-基本类型对应的内置对象，以及他们之间的装箱拆箱操作\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#五-基本类型对应的内置对象，以及他们之间的装箱拆箱操作\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 五.基本类型对应的内置对象，以及他们之间的装箱拆箱操作\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"包装对象\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#包装对象\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 包装对象\")]),t._v(\" \"),a(\"p\",[t._v(\"在基本类型中，有三个比较特殊的存在就是：\"),a(\"code\",[t._v(\"String\")]),t._v(\" \"),a(\"code\",[t._v(\"Number\")]),t._v(\" \"),a(\"code\",[t._v(\"Boolean\")]),t._v(\"，这三个基本类型都有自己对应的包装对象。并且随时等候召唤。包装对象呢，其实就是对象，有相应的属性和方法。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" str \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'hello'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//string 基本类型\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" s2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"charAt\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//在执行到这一句的时候 后台会自动完成以下动作 ：\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//相当于：\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\" \\n \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" str \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'hello'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 1 找到对应的包装对象类型，然后通过包装对象创建出一个和基本类型值相同的对象\")]),t._v(\"\\n \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" s2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"chaAt\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 2 然后这个对象就可以调用包装对象下的方法，并且返回结给s2.\")]),t._v(\"\\n str \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//    3 之后这个临时创建的对象就被销毁了， str =null; \")]),t._v(\"\\n \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"s2\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//h \")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"alert\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//hello     注意这是一瞬间的动作 实际上我们没有改变字符串本身的值。就是做了下面的动作.这也是为什么每个字符串具有的方法并没有改变字符串本身的原因。\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\")])]),a(\"p\",[t._v(\"由此我们可以知道，引用类型和基本包装对象的区别在于：\"),a(\"code\",[t._v(\"生存期\")])]),t._v(\" \"),a(\"p\",[t._v(\"引用类型所创建的对象，在执行的期间一直在内存中，而基本包装对象只是存在了一瞬间。\")]),t._v(\" \"),a(\"p\",[t._v(\"所以我们无法直接给基本类型添加方法,所以在基本包装对象的原型下面添加，每个对象都有原型。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//给字符串添加方法  要写到对应的包装对象的原型下才行\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" str \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'hello'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"prototype\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"last\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"fuction\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"charAt\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"this\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"length\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\nstr\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"last\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 5 执行到这一句，后台依然会偷偷的干这些事\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//相当于\")]),t._v(\"\\n｛ \\n    \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" str \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"String\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'hello'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 找到基本包装对象，new一个和字符串值相同的对象，\")]),t._v(\"\\n    str\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"last\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 通过这个对象找到了包装对象下的方法并调用 \")]),t._v(\"\\n    str \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"null\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//  这个对象被销毁\")]),t._v(\"\\n｝\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\")])]),a(\"h4\",{attrs:{id:\"装箱拆箱操作\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#装箱拆箱操作\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 装箱拆箱操作\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"装箱转换：把基本类型转换为对应的包装类型\")]),t._v(\" \"),a(\"li\",[t._v(\"拆箱操作：把引用类型转换为基本类型\")])]),t._v(\" \"),a(\"p\",[t._v(\"既然原始类型不能扩展属性和方法，那么我们是如何使用原始类型调用方法的呢？\")]),t._v(\" \"),a(\"p\",[t._v(\"每当我们操作一个基础类型时，后台就会自动创建一个包装类型的对象，从而让我们能够调用一些方法和属性，例如下面的代码：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" name \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"ConardLi\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" name2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" name\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"substring\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"2\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\")])]),a(\"p\",[t._v(\"实际上发生了以下几个过程：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"创建一个\"),a(\"code\",[t._v(\"String\")]),t._v(\"的包装类型实例\")]),t._v(\" \"),a(\"li\",[t._v(\"在实例上调用\"),a(\"code\",[t._v(\"substring\")]),t._v(\"方法\")]),t._v(\" \"),a(\"li\",[t._v(\"销毁实例\")])]),t._v(\" \"),a(\"p\",[t._v(\"也就是说，我们使用基本类型调用方法，就会自动进行装箱和拆箱操作，相同的，我们使用\"),a(\"code\",[t._v(\"Number\")]),t._v(\"和\"),a(\"code\",[t._v(\"Boolean\")]),t._v(\"类型时，也会发生这个过程。\")]),t._v(\" \"),a(\"p\",[t._v(\"从引用类型到基本类型的转换，也就是拆箱的过程中，会遵循\"),a(\"code\",[t._v(\"ECMAScript规范\")]),t._v(\"规定的\"),a(\"code\",[t._v(\"toPrimitive\")]),t._v(\"原则，一般会调用引用类型的\"),a(\"code\",[t._v(\"valueOf\")]),t._v(\"和\"),a(\"code\",[t._v(\"toString\")]),t._v(\"方法，你也可以直接重写\"),a(\"code\",[t._v(\"toPeimitive\")]),t._v(\"方法。一般转换成不同类型的值遵循的原则不同，例如：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"引用类型转换为\"),a(\"code\",[t._v(\"Number\")]),t._v(\"类型，先调用\"),a(\"code\",[t._v(\"valueOf\")]),t._v(\"，再调用\"),a(\"code\",[t._v(\"toString\")])]),t._v(\" \"),a(\"li\",[t._v(\"引用类型转换为\"),a(\"code\",[t._v(\"String\")]),t._v(\"类型，先调用\"),a(\"code\",[t._v(\"toString\")]),t._v(\"，再调用\"),a(\"code\",[t._v(\"valueOf\")])])]),t._v(\" \"),a(\"p\",[t._v(\"若\"),a(\"code\",[t._v(\"valueOf\")]),t._v(\"和\"),a(\"code\",[t._v(\"toString\")]),t._v(\"都不存在，或者没有返回基本类型，则抛出\"),a(\"code\",[t._v(\"TypeError\")]),t._v(\"异常。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" obj \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"valueOf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'valueOf'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"123\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"toString\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'toString'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'ConardLi'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// valueOf   122\")]),t._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token template-string\"}},[a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"`\")]),a(\"span\",{pre:!0,attrs:{class:\"token interpolation\"}},[a(\"span\",{pre:!0,attrs:{class:\"token interpolation-punctuation punctuation\"}},[t._v(\"${\")]),t._v(\"obj\"),a(\"span\",{pre:!0,attrs:{class:\"token interpolation-punctuation punctuation\"}},[t._v(\"}\")])]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"ConardLi`\")])]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// toString  ConardLiConardLi\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" obj2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),t._v(\"Symbol\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"toPrimitive\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'toPrimitive'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"123\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj2 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"   \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// valueOf   122\")]),t._v(\"\\n\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" obj3 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"valueOf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'valueOf'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"toString\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=>\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" console\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'toString'\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"obj3 \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// valueOf  \")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// toString\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// TypeError\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"9\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"10\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"11\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"12\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"13\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"14\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"15\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"16\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"17\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"18\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"19\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"20\")]),a(\"br\")])]),a(\"p\",[t._v(\"除了程序中的自动拆箱和自动装箱，我们还可以手动进行拆箱和装箱操作。我们可以直接调用包装类型的\"),a(\"code\",[t._v(\"valueOf\")]),t._v(\"或\"),a(\"code\",[t._v(\"toString\")]),t._v(\"，实现拆箱操作：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"var\")]),t._v(\" num \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Number\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"123\"')]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"  \\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" num\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"valueOf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//number\")]),t._v(\"\\nconsole\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"log\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" num\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"toString\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//string\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\")])]),a(\"h2\",{attrs:{id:\"七-null和undefined的区别\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#七-null和undefined的区别\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 七.\"),a(\"code\",[t._v(\"null\")]),t._v(\"和\"),a(\"code\",[t._v(\"undefined\")]),t._v(\"的区别\")]),t._v(\" \"),a(\"p\",[t._v(\"在原始类型中，有两个类型\"),a(\"code\",[t._v(\"Null\")]),t._v(\"和\"),a(\"code\",[t._v(\"Undefined\")]),t._v(\"，他们都有且仅有一个值，\"),a(\"code\",[t._v(\"null\")]),t._v(\"和\"),a(\"code\",[t._v(\"undefined\")]),t._v(\"，\"),a(\"code\",[t._v(\"null\")]),t._v(\"表示空，\"),a(\"code\",[t._v(\"undefined\")]),t._v(\"表示未定义，我一般这样区分它们：\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"null\")])]),t._v(\" \"),a(\"p\",[t._v(\"表示被赋值过的对象，刻意把一个对象赋值为\"),a(\"code\",[t._v(\"null\")]),t._v(\"，故意表示其为空，不应有值。\")]),t._v(\" \"),a(\"p\",[t._v(\"所以对象的某个属性值为\"),a(\"code\",[t._v(\"null\")]),t._v(\"是正常的，\"),a(\"code\",[t._v(\"null\")]),t._v(\"转换为数值时值为\"),a(\"code\",[t._v(\"0\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"undefined\")])]),t._v(\" \"),a(\"p\",[t._v(\"表示“缺少值”，即此处应有一个值，但还没有定义，\")]),t._v(\" \"),a(\"p\",[t._v(\"如果一个对象的某个属性值为\"),a(\"code\",[t._v(\"undefined\")]),t._v(\"，这是不正常的，如\"),a(\"code\",[t._v(\"obj.name=undefined\")]),t._v(\"，我们不应该这样写，应该直接\"),a(\"code\",[t._v(\"delete obj.name\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"undefined\")]),t._v(\"转为数值时为\"),a(\"code\",[t._v(\"NaN\")]),t._v(\"(非数字值的特殊值)\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"JavaScript\")]),t._v(\"是一门动态类型语言，成员除了表示存在的空值外，还有可能根本就不存在（因为存不存在只在运行期才知道），这就是\"),a(\"code\",[t._v(\"undefined\")]),t._v(\"的意义所在。对于\"),a(\"code\",[t._v(\"JAVA\")]),t._v(\"这种强类型语言，如果有\"),a(\"code\",[t._v('\"undefined\"')]),t._v(\"这种情况，就会直接编译失败，所以在它不需要一个这样的类型\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"八-至少可以说出三种判断javascript数据类型的方式，以及他们的优缺点，如何准确的判断数组类型\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#八-至少可以说出三种判断javascript数据类型的方式，以及他们的优缺点，如何准确的判断数组类型\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 八.至少可以说出三种判断\"),a(\"code\",[t._v(\"JavaScript\")]),t._v(\"数据类型的方式，以及他们的优缺点，如何准确的判断数组类型\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_1-typeof\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-typeof\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 1. typeof\")]),t._v(\" \"),a(\"p\",[a(\"strong\",[t._v(\"适用场景\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"typeof\")]),t._v(\"操作符可以准确判断一个变量是否为下面几个原始类型：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v(\"'ConardLi'\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// string\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"123\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// number\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[t._v(\"true\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// boolean\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"Symbol\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// symbol\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"undefined\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// undefined\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),a(\"br\")])]),a(\"p\",[t._v(\"你还可以用它来判断函数类型：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// function\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[a(\"strong\",[t._v(\"不适用场景\")])]),t._v(\" \"),a(\"p\",[t._v(\"当你用\"),a(\"code\",[t._v(\"typeof\")]),t._v(\"来判断引用类型时似乎显得有些乏力了：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// object\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// object\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Date\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// object\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"typeof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"^\")]),t._v(\"\\\\d\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),t._v(\"$\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// object\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),a(\"br\")])]),a(\"p\",[t._v(\"除函数外所有的引用类型都会被判定为\"),a(\"code\",[t._v(\"object\")]),t._v(\"。\")]),t._v(\" \"),a(\"p\",[t._v(\"另外\"),a(\"code\",[t._v(\"typeof null === 'object'\")]),t._v(\"也会让人感到头痛，这是在\"),a(\"code\",[t._v(\"JavaScript\")]),t._v(\"初版就流传下来的\"),a(\"code\",[t._v(\"bug\")]),t._v(\"，后面由于修改会造成大量的兼容问题就一直没有被修复...\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_2-instanceof\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-instanceof\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 2. instanceof\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"instanceof\")]),t._v(\"操作符可以帮助我们判断引用类型具体是什么类型的对象：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"instanceof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Array\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Date\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"instanceof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Date\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"new\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"RegExp\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"instanceof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"RegExp\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),a(\"br\")])]),a(\"p\",[t._v(\"我们先来回顾下原型链的几条规则：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"1.所有引用类型都具有对象特性，即可以自由扩展属性\")]),t._v(\" \"),a(\"li\",[t._v(\"2.所有引用类型都具有一个\"),a(\"code\",[t._v(\"__proto__\")]),t._v(\"（隐式原型）属性，是一个普通对象\")]),t._v(\" \"),a(\"li\",[t._v(\"3.所有的函数都具有\"),a(\"code\",[t._v(\"prototype\")]),t._v(\"（显式原型）属性，也是一个普通对象\")]),t._v(\" \"),a(\"li\",[t._v(\"4.所有引用类型\"),a(\"code\",[t._v(\"__proto__\")]),t._v(\"值指向它构造函数的\"),a(\"code\",[t._v(\"prototype\")])]),t._v(\" \"),a(\"li\",[t._v(\"5.当试图得到一个对象的属性时，如果变量本身没有这个属性，则会去他的\"),a(\"code\",[t._v(\"__proto__\")]),t._v(\"中去找\")])]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"[] instanceof Array\")]),t._v(\"实际上是判断\"),a(\"code\",[t._v(\"Array.prototype\")]),t._v(\"是否在\"),a(\"code\",[t._v(\"[]\")]),t._v(\"的原型链上。\")]),t._v(\" \"),a(\"p\",[t._v(\"所以，使用\"),a(\"code\",[t._v(\"instanceof\")]),t._v(\"来检测数据类型，不会很准确，这不是它设计的初衷：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"[\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"]\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"instanceof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"  \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"instanceof\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[t._v(\"Object\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// true\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\")])]),a(\"p\",[t._v(\"另外，使用\"),a(\"code\",[t._v(\"instanceof\")]),t._v(\"也不能检测基本数据类型，所以\"),a(\"code\",[t._v(\"instanceof\")]),t._v(\"并不是一个很好的选择。\")]),t._v(\" \"),a(\"h3\",{attrs:{id:\"_3-tostring\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-tostring\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 3. toString\")]),t._v(\" \"),a(\"p\",[t._v(\"上面我们在拆箱操作中提到了\"),a(\"code\",[t._v(\"toString\")]),t._v(\"函数，我们可以调用它实现从引用类型的转换。\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"每一个引用类型都有\"),a(\"code\",[t._v(\"toString\")]),t._v(\"方法，默认情况下，\"),a(\"code\",[t._v(\"toString()\")]),t._v(\"方法被每个\"),a(\"code\",[t._v(\"Object\")]),t._v(\"对象继承。如果此方法在自定义对象中未被覆盖，\"),a(\"code\",[t._v(\"toString()\")]),t._v(\" 返回 \"),a(\"code\",[t._v('\"[object type]\"')]),t._v(\"，其中\"),a(\"code\",[t._v(\"type\")]),t._v(\"是对象的类型。\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"const\")]),t._v(\" obj \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\nobj\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),a(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"toString\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// [object Object]\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\"),a(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),a(\"br\")])]),a(\"p\",[t._v(\"注意，上面提到了\"),a(\"code\",[t._v(\"如果此方法在自定义对象中未被覆盖\")]),t._v(\"，\"),a(\"code\",[t._v(\"toString\")]),t._v(\"才会达到预想的效果，事实上，大部分引用类型比如\"),a(\"code\",[t._v(\"Array、Date、RegExp\")]),t._v(\"等都重写了\"),a(\"code\",[t._v(\"toString\")]),t._v(\"方法。\")]),t._v(\" \"),a(\"p\",[t._v(\"我们可以直接调用\"),a(\"code\",[t._v(\"Object\")]),t._v(\"原型上未被覆盖的\"),a(\"code\",[t._v(\"toString()\")]),t._v(\"方法，使用\"),a(\"code\",[t._v(\"call\")]),t._v(\"来改变\"),a(\"code\",[t._v(\"this\")]),t._v(\"指向来达到我们想要的效果。\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/javascript/toString.jpg\",alt:\"img\"}})]),t._v(\" \"),a(\"h2\",{attrs:{id:\"九-可能发生隐式类型转换的场景以及转换原则，应如何避免或巧妙应用\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#九-可能发生隐式类型转换的场景以及转换原则，应如何避免或巧妙应用\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 九.可能发生隐式类型转换的场景以及转换原则，应如何避免或巧妙应用\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_1-隐式类型转换常见场景\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-隐式类型转换常见场景\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 1.隐式类型转换常见场景\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"自动转换-boolean\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自动转换-boolean\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 自动转换 Boolean\")]),t._v(\" \"),a(\"p\",[t._v(\"例如 if 语句 或者其他需要 Boolean 的地方\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"if\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"表达式\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"h5\",{attrs:{id:\"运算符\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#运算符\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 运算符\")]),t._v(\" \"),a(\"p\",[t._v(\"在非 Numeber 类型进行数学运算符 - * / 时，会先将非 Number 转换成 Number 类型。 \"),a(\"code\",[t._v(\"+\")]),t._v(\" 运算符要考虑字符串的情况，在操作数中存在字符串时，优先转换成字符串，\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"+\")]),t._v(\" 运算符其中一个操作数是字符串的话，会进行连接字符串的操作。\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"1+'2' // '12'复制代码\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[a(\"code\",[t._v(\"+\")]),t._v(\" 操作符的执行顺序是：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"当一侧操作数为 String 类型，会优先将另一侧转换为字符串类型。\")]),t._v(\" \"),a(\"li\",[t._v(\"当一侧操作数为 Number 类型，另一侧为原始类型，则将原始类型转换为 Number 类型。\")]),t._v(\" \"),a(\"li\",[t._v(\"当一侧操作数为 Number 类型，另一侧为引用类型，将引用类型和 Number 类型转换成字符串后拼接。\")])]),t._v(\" \"),a(\"h5\",{attrs:{id:\"对象\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#对象\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 对象\")]),t._v(\" \"),a(\"p\",[t._v(\"只有在 JavaScript \"),a(\"strong\",[t._v(\"表达式\")]),t._v(\"或\"),a(\"strong\",[t._v(\"语句\")]),t._v(\"中需要用到数字或字符串时，对象才被隐式转换。\")]),t._v(\" \"),a(\"p\",[t._v(\"当需要将对象转换为数字时，需要三个步骤\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"调用 valueOf()。如果结果是原始值（不是一个对象），则将其转换为一个数字。\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"valueOf\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 15\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"ul\",[a(\"li\",[t._v(\"否则，调用 toString() 方法。如果结果是原始值，则将其转换为一个数字。\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"toString\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"5\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"// 15\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"ul\",[a(\"li\",[t._v(\"否则，抛出一个类型错误。\")])]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"3\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"*\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token function-variable function\"}},[t._v(\"toString\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"function\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"return\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"//TypeError: Cannot convert object to primitive value\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"h4\",{attrs:{id:\"_2-转换原则\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-转换原则\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 2.转换原则\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/javascript/change.jpg\",alt:\"\"}})]),t._v(\" \"),a(\"h5\",{attrs:{id:\"拓展：\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#拓展：\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 拓展：\")]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://justjavac.com/javascript/2012/12/20/object-plus-object.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"JavaScript中,{}+{}等于多少?\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"p\",[a(\"a\",{attrs:{href:\"https://justjavac.com/javascript/2012/05/24/can-you-explain-why-10.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"为什么 ++[[]][+[]]+[+[]] = 10？\"),a(\"OutboundLink\")],1)]),t._v(\" \"),a(\"h2\",{attrs:{id:\"十-出现小数精度丢失的原因，javascript可以存储的最大数字、最大安全数字，javascript处理大数字的方法、避免精度丢失的方法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#十-出现小数精度丢失的原因，javascript可以存储的最大数字、最大安全数字，javascript处理大数字的方法、避免精度丢失的方法\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 十.出现小数精度丢失的原因，\"),a(\"code\",[t._v(\"JavaScript\")]),t._v(\"可以存储的最大数字、最大安全数字，\"),a(\"code\",[t._v(\"JavaScript\")]),t._v(\"处理大数字的方法、避免精度丢失的方法\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_1-出现小数精度丢失的原因\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_1-出现小数精度丢失的原因\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 1.出现小数精度丢失的原因\")]),t._v(\" \"),a(\"p\",[t._v(\"小数的\"),a(\"code\",[t._v(\"二进制\")]),t._v(\"大多数都是无限循环的。在\"),a(\"a\",{attrs:{href:\"https://link.juejin.im/?target=http%3A%2F%2Fwww.ecma-international.org%2Fecma-262%2F5.1%2F%23sec-4.3.19\",target:\"_blank\",rel:\"noopener noreferrer\"}},[t._v(\"ECMAScript®语言规范\"),a(\"OutboundLink\")],1),t._v(\"中可以看到，\"),a(\"code\",[t._v(\"ECMAScript\")]),t._v(\"中的\"),a(\"code\",[t._v(\"Number\")]),t._v(\"类型遵循\"),a(\"code\",[t._v(\"IEEE 754\")]),t._v(\"标准。使用64位固定长度来表示。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"ieee-754\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ieee-754\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" IEEE 754\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"IEEE754\")]),t._v(\"标准包含一组实数的二进制表示法。它有三部分组成：\")]),t._v(\" \"),a(\"ul\",[a(\"li\",[t._v(\"符号位\")]),t._v(\" \"),a(\"li\",[t._v(\"指数位\")]),t._v(\" \"),a(\"li\",[t._v(\"尾数位\")])]),t._v(\" \"),a(\"p\",[t._v(\"三种精度的浮点数各个部分位数如下：\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/javascript/%E4%BA%8C%E8%BF%9B%E5%88%B6.png\",alt:\"image\"}})]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"JavaScript\")]),t._v(\"使用的是64位双精度浮点数编码，所以它的\"),a(\"code\",[t._v(\"符号位\")]),t._v(\"占\"),a(\"code\",[t._v(\"1\")]),t._v(\"位，指数位占\"),a(\"code\",[t._v(\"11\")]),t._v(\"位，尾数位占\"),a(\"code\",[t._v(\"52\")]),t._v(\"位。\")]),t._v(\" \"),a(\"p\",[t._v(\"下面我们在理解下什么是\"),a(\"code\",[t._v(\"符号位\")]),t._v(\"、\"),a(\"code\",[t._v(\"指数位\")]),t._v(\"、\"),a(\"code\",[t._v(\"尾数位\")]),t._v(\"，以\"),a(\"code\",[t._v(\"0.1\")]),t._v(\"为例：\")]),t._v(\" \"),a(\"p\",[t._v(\"它的二进制为：\"),a(\"code\",[t._v(\"0.0001100110011001100...\")])]),t._v(\" \"),a(\"p\",[t._v(\"为了节省存储空间，在计算机中它是以科学计数法表示的，也就是\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"1.100110011001100...\")]),t._v(\" X 2-4\")]),t._v(\" \"),a(\"p\",[t._v(\"如果这里不好理解可以想一下十进制的数：\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"1100\")]),t._v(\"的科学计数法为\"),a(\"code\",[t._v(\"11\")]),t._v(\" X 102\")]),t._v(\" \"),a(\"p\",[t._v(\"所以：\")]),t._v(\" \"),a(\"p\",[a(\"img\",{attrs:{src:\"/javascript/%E4%BA%8C%E8%BF%9B%E5%88%B62.png\",alt:\"image\"}})]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"符号位\")]),t._v(\"就是标识正负的，\"),a(\"code\",[t._v(\"1\")]),t._v(\"表示\"),a(\"code\",[t._v(\"负\")]),t._v(\"，\"),a(\"code\",[t._v(\"0\")]),t._v(\"表示\"),a(\"code\",[t._v(\"正\")]),t._v(\"；\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"指数位\")]),t._v(\"存储科学计数法的指数；\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"尾数位\")]),t._v(\"存储科学计数法后的有效数字；\")]),t._v(\" \"),a(\"p\",[t._v(\"所以我们通常看到的二进制，其实是计算机实际存储的尾数位。\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"js中的tostring-2\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js中的tostring-2\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" js中的toString(2)\")]),t._v(\" \"),a(\"p\",[t._v(\"由于尾数位只能存储\"),a(\"code\",[t._v(\"52\")]),t._v(\"个数字，这就能解释\"),a(\"code\",[t._v(\"toString(2)\")]),t._v(\"的执行结果了：\")]),t._v(\" \"),a(\"p\",[t._v(\"如果计算机没有存储空间的限制，那么\"),a(\"code\",[t._v(\"0.1\")]),t._v(\"的\"),a(\"code\",[t._v(\"二进制\")]),t._v(\"应该是：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0.00011001100110011001100110011001100110011001100110011001\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[t._v(\"科学计数法尾数位\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"1.1001100110011001100110011001100110011001100110011001\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"...\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[t._v(\"但是由于限制，有效数字第\"),a(\"code\",[t._v(\"53\")]),t._v(\"位及以后的数字是不能存储的，它遵循，如果是\"),a(\"code\",[t._v(\"1\")]),t._v(\"就向前一位进\"),a(\"code\",[t._v(\"1\")]),t._v(\"，如果是\"),a(\"code\",[t._v(\"0\")]),t._v(\"就舍弃的原则。\")]),t._v(\" \"),a(\"p\",[t._v(\"0.1的二进制科学计数法第53位是1，所以就有了下面的结果：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-js line-numbers-mode\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"0.0001100110011001100110011001100110011001100110011001101\")]),t._v(\"\\n\")])]),t._v(\" \"),a(\"div\",{staticClass:\"line-numbers-wrapper\"},[a(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),a(\"br\")])]),a(\"p\",[t._v(\"0.2\"),a(\"code\",[t._v(\"有着同样的问题，其实正是由于这样的存储，在这里有了精度丢失，导致了\")]),t._v(\"0.1+0.2!=0.3\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_2-javascript可以存储的最大数字、最大安全数字\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_2-javascript可以存储的最大数字、最大安全数字\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 2.\"),a(\"code\",[t._v(\"JavaScript\")]),t._v(\"可以存储的最大数字、最大安全数字\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"javascript能表示的最大数字\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#javascript能表示的最大数字\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" JavaScript能表示的最大数字\")]),t._v(\" \"),a(\"p\",[t._v(\"由与\"),a(\"code\",[t._v(\"IEEE 754\")]),t._v(\"双精度64位规范的限制：\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"指数位\")]),t._v(\"能表示的最大数字：\"),a(\"code\",[t._v(\"1023\")]),t._v(\"(十进制)\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"尾数位\")]),t._v(\"能表达的最大数字即尾数位都位\"),a(\"code\",[t._v(\"1\")]),t._v(\"的情况\")]),t._v(\" \"),a(\"p\",[t._v(\"所以JavaScript能表示的最大数字即位\")]),t._v(\" \"),a(\"p\",[a(\"code\",[t._v(\"1.111...\")]),t._v(\"X 2^1023 这个结果转换成十进制是\"),a(\"code\",[t._v(\"1.7976931348623157e+308\")]),t._v(\",这个结果即为\"),a(\"code\",[t._v(\"Number.MAX_VALUE\")]),t._v(\"。\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"最大安全数字\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#最大安全数字\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 最大安全数字\")]),t._v(\" \"),a(\"p\",[t._v(\"JavaScript中\"),a(\"code\",[t._v(\"Number.MAX_SAFE_INTEGER\")]),t._v(\"表示最大安全数字,计算结果是\"),a(\"code\",[t._v(\"9007199254740991\")]),t._v(\"，即在这个数范围内不会出现精度丢失（小数除外）,这个数实际上是\"),a(\"code\",[t._v(\"1.111...\")]),t._v(\"X 2^52。\")]),t._v(\" \"),a(\"h4\",{attrs:{id:\"_3-javascript处理大数字的方法、避免精度丢失的方法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-javascript处理大数字的方法、避免精度丢失的方法\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 3.\"),a(\"code\",[t._v(\"JavaScript\")]),t._v(\"处理大数字的方法、避免精度丢失的方法\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"javascript处理大数字的方法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#javascript处理大数字的方法\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" \"),a(\"code\",[t._v(\"JavaScript\")]),t._v(\"处理大数字的方法\")]),t._v(\" \"),a(\"p\",[t._v(\"所有语言基本对于几百位的大数字基本都有相同的处理方法。使用字符串来存储数字。通过高精度算法来进行操作。\")]),t._v(\" \"),a(\"h5\",{attrs:{id:\"避免精度丢失的方法\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#避免精度丢失的方法\",\"aria-hidden\":\"true\"}},[t._v(\"#\")]),t._v(\" 避免精度丢失的方法\")]),t._v(\" \"),a(\"p\",[t._v(\"整数一般不用考虑这个问题。浮点数最好的办法就是先放大成整数，计算完成后再除以倍数 转化成小数。\")])])},[],!1,null,null,null);s.default=e.exports}}]);","extractedComments":[]}